
ifeq ($(CHINESE_DEPPARSER_LABELED), true)
	CHINESE_DEPPARSER_D = -DLABELED
endif

ifeq ($(ENGLISH_DEPPARSER_LABELED), true)
	ENGLISH_DEPPARSER_D = -DLABELED
endif

ifeq ($(CHINESE_DEPPARSER_IMPL), combined)
	CHINESE_DEPPARSER_D := $(CHINESE_DEPPARSER_D) -DCOMBINED
	CHINESE_DEPPARSER_IMPL = nivre
endif

ifeq ($(ENGLISH_DEPPARSER_IMPL), combined)
	ENGLISH_DEPPARSER_D := $(ENGLISH_DEPPARSER_D) -DCOMBINED
	ENGLISH_DEPPARSER_IMPL = nivre
endif

#====================================================

$(DIST_DEPPARSER):
	mkdir $(DIST_DEPPARSER)
$(OBJECT_DEPPARSER):
	mkdir $(OBJECT_DEPPARSER)
chinese.depparser: $(OBJECT_DIR) $(DIST_DIR) $(OBJECT_DEPPARSER) $(DIST_DEPPARSER) $(DIST_DEPPARSER)/depparser $(DIST_DEPPARSER)/train
	@echo The Chinese dependency parser system is compiled successfully into $(DIST_DEPPARSER).

# the weight module
$(OBJECT_DEPPARSER)/weight.o: $(OBJECT_DEPPARSER) $(SRC_CHINESE_DEPPARSER)/depparser_weight_base.h $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/depparser_weight.h $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/depparser_weight.cpp ./Makefile
	$(CXX) $(CXXFLAGS) $(CHINESE_DEPPARSER_D) -DTARGET_LANGUAGE=chinese -I$(SRC_CHINESE) -I$(SRC_CHINESE_DEPPARSER) -I$(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL) -c $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/depparser_weight.cpp -o $(OBJECT_DEPPARSER)/weight.o

# the depparser object
$(OBJECT_DIR)/chinese.depparser.o: $(SRC_INCLUDES)/hash.h $(SRC_CHINESE)/dep.h $(SRC_CHINESE_DEPPARSER)/depparser_base.h $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/depparser.h $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/depparser.cpp $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/state.h $(SRC_CHINESE_DEPPARSER)/supertag.h ./Makefile
	$(CXX) $(CXXFLAGS) $(CHINESE_DEPPARSER_D) -DTARGET_LANGUAGE=chinese -I$(SRC_CHINESE) -I$(SRC_CHINESE_DEPPARSER) -I$(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL) -c $(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL)/depparser.cpp -o $(OBJECT_DIR)/chinese.depparser.o

# the main executable
$(DIST_DEPPARSER)/depparser: $(SRC_CHINESE_DEPPARSER)/main.cpp $(OBJECT_DIR)/chinese.depparser.o $(OBJECT_DEPPARSER)/weight.o $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(CHINESE_DEPPARSER_D) -DTARGET_LANGUAGE=chinese -I$(SRC_CHINESE) -I$(SRC_CHINESE_DEPPARSER) -I$(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL) -c $(SRC_CHINESE_DEPPARSER)/main.cpp -o $(OBJECT_DEPPARSER)/main.o
	$(LD) $(LDFLAGS) -o $(DIST_DEPPARSER)/depparser $(OBJECT_DIR)/chinese.depparser.o $(OBJECT_DEPPARSER)/weight.o $(OBJECT_DEPPARSER)/main.o $(OBJECTS)

# the trainer for depparser
$(DIST_DEPPARSER)/train: $(SRC_CHINESE_DEPPARSER)/train.cpp $(OBJECT_DIR)/chinese.depparser.o $(OBJECT_DEPPARSER)/weight.o $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(CHINESE_DEPPARSER_D) -DTARGET_LANGUAGE=chinese -I$(SRC_CHINESE) -I$(SRC_CHINESE_DEPPARSER) -I$(SRC_CHINESE_DEPPARSER)/implementations/$(CHINESE_DEPPARSER_IMPL) -c $(SRC_CHINESE_DEPPARSER)/train.cpp -o $(OBJECT_DEPPARSER)/train.o
	$(LD) $(LDFLAGS) -o $(DIST_DEPPARSER)/train $(OBJECT_DIR)/chinese.depparser.o $(OBJECT_DEPPARSER)/weight.o $(OBJECT_DEPPARSER)/train.o $(OBJECTS)

#====================================================


$(DIST_ENGLISH_DEPPARSER):
	mkdir $(DIST_ENGLISH_DEPPARSER)
$(OBJECT_ENGLISH_DEPPARSER):
	mkdir $(OBJECT_ENGLISH_DEPPARSER)
english.depparser: $(OBJECT_DIR) $(DIST_DIR) $(OBJECT_ENGLISH_DEPPARSER) $(DIST_ENGLISH_DEPPARSER) $(DIST_ENGLISH_DEPPARSER)/depparser $(DIST_ENGLISH_DEPPARSER)/train $(DIST_ENGLISH_DEPPARSER)/unit_test
	@echo The English dependency parser system is compiled successfully into $(DIST_ENGLISH_DEPPARSER).

# the weight module
$(OBJECT_ENGLISH_DEPPARSER)/weight.o: $(OBJECT_ENGLISH_DEPPARSER) $(SRC_COMMON_DEPPARSER)/depparser_weight_base.h $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/depparser_weight.h $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/depparser_weight.cpp ./Makefile
	$(CXX) $(CXXFLAGS) $(ENGLISH_DEPPARSER_D) -DTARGET_LANGUAGE=english -I$(SRC_ENGLISH) -I$(SRC_COMMON_DEPPARSER) -I$(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL) -c $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/depparser_weight.cpp -o $(OBJECT_ENGLISH_DEPPARSER)/weight.o


# dynamic oracle
#$(OBJECT_DIR)/dynamicOracle.o: $(SRC_COMMON_DEPPARSER)/dynamicOracle.h ./Makefile
#	$(CXX) $(CXXFLAGS) $(ENGLISH_DEPPARSER_D) -TDTARGET_LANGUAGE=english -I$(SRC_ENGLISH) -I$(SRC_COMMON_DEPPARSER) -I$(SRC_COMMON_DEPPARSER)/imp#lementations/$(ENGLISH_DEPPARSER_IMPL) -c $(SRC_COMMON_DEPPARSER)/dynamicOracle.cpp -o $(OBJECT_DIR)/dynamicOracle.o



# the depparser object
$(OBJECT_DIR)/english.depparser.o: $(SRC_INCLUDES)/hash.h $(SRC_COMMON_DEPPARSER)/depparser_base.h $(SRC_COMMON_DEPPARSER)/dependenciesCollection.h $(SRC_COMMON_DEPPARSER)/dependenciesCollection.cpp $(SRC_COMMON_DEPPARSER)/dynamicOracle.h $(SRC_COMMON_DEPPARSER)/dynamicOracle.cpp  $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/depparser.h $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/depparser.cpp $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/state.h $(SRC_ENGLISH)/dep.h ./Makefile
	$(CXX) $(CXXFLAGS) $(ENGLISH_DEPPARSER_D) -DTARGET_LANGUAGE=english -I$(SRC_ENGLISH) -I$(SRC_COMMON_DEPPARSER) -I$(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL) -c $(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL)/depparser.cpp -o $(OBJECT_DIR)/english.depparser.o


# the main executable
$(DIST_ENGLISH_DEPPARSER)/depparser: $(SRC_COMMON_DEPPARSER)/main.cpp $(OBJECT_DIR)/english.depparser.o $(OBJECT_ENGLISH_DEPPARSER)/weight.o $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(ENGLISH_DEPPARSER_D) -DTARGET_LANGUAGE=english -I$(SRC_ENGLISH) -I$(SRC_COMMON_DEPPARSER) -I$(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL) -c $(SRC_COMMON_DEPPARSER)/main.cpp -o $(OBJECT_ENGLISH_DEPPARSER)/main.o
	$(LD) $(LDFLAGS) -o $(DIST_ENGLISH_DEPPARSER)/depparser $(OBJECT_DIR)/english.depparser.o $(OBJECT_ENGLISH_DEPPARSER)/weight.o $(OBJECT_ENGLISH_DEPPARSER)/main.o $(OBJECTS)

# the trainer for depparser
$(DIST_ENGLISH_DEPPARSER)/train: $(SRC_COMMON_DEPPARSER)/train.cpp $(OBJECT_DIR)/english.depparser.o $(OBJECT_ENGLISH_DEPPARSER)/weight.o $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(ENGLISH_DEPPARSER_D) -DTARGET_LANGUAGE=english -I$(SRC_ENGLISH) -I$(SRC_COMMON_DEPPARSER) -I$(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL) -c $(SRC_COMMON_DEPPARSER)/train.cpp -o $(OBJECT_ENGLISH_DEPPARSER)/train.o
	$(LD) $(LDFLAGS) -o $(DIST_ENGLISH_DEPPARSER)/train $(OBJECT_DIR)/english.depparser.o $(OBJECT_ENGLISH_DEPPARSER)/weight.o $(OBJECT_ENGLISH_DEPPARSER)/train.o $(OBJECTS)

# the unitest for depparser
$(DIST_ENGLISH_DEPPARSER)/unit_test: $(SRC_COMMON_DEPPARSER)/test.cpp $(OBJECT_DIR)/english.depparser.o $(OBJECT_ENGLISH_DEPPARSER)/weight.o $(OBJECTS)
	$(CXX) $(CXXFLAGS) $(ENGLISH_DEPPARSER_D) -DTARGET_LANGUAGE=english -I$(SRC_ENGLISH) -I$(SRC_COMMON_DEPPARSER) -I$(SRC_COMMON_DEPPARSER)/implementations/$(ENGLISH_DEPPARSER_IMPL) -c $(SRC_COMMON_DEPPARSER)/test.cpp -o $(OBJECT_ENGLISH_DEPPARSER)/test.o
	$(LD) $(LDFLAGS) -o $(DIST_ENGLISH_DEPPARSER)/unit_test $(OBJECT_DIR)/english.depparser.o $(OBJECT_ENGLISH_DEPPARSER)/weight.o $(OBJECT_ENGLISH_DEPPARSER)/test.o $(OBJECTS)

